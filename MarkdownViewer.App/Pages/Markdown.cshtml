@page
@model MarkdownViewer.App.Pages.MarkdownModel

@{
    Layout = null;
}

@foreach (var namespaceGrp in Model.Classes.GroupBy(item => item.Namespace))
{
<text># @namespaceGrp.Key</text>
<text></text>

foreach (var classInfo in namespaceGrp.OrderBy(item => item.Name))
{
<text>## [@classInfo.Name](@Model.CSMarkdown.GetOnlineUrl(classInfo.Location))</text>      
<text></text>

var props = classInfo.Properties.OrderBy(p => p.Name);
if (props.Any())
{
<text>### Properties</text>
<text></text>
foreach (var prop in classInfo.Properties.OrderBy(p => p.Name))
{
<text>- @Model.CSMarkdown.TypeUrlOrName(prop) [@prop.Name](@Model.CSMarkdown.GetOnlineUrl(prop.Location))</text>
<text></text>
}
}

var methods = classInfo.Methods.OrderBy(m => m.Name);
if (methods.Any())
{
<text>### Methods</text>
<text></text>
foreach (var method in classInfo.Methods.OrderBy(m => m.Name))
{
<text>- @method.OriginalTypeName [@method.Name](@Model.CSMarkdown.GetOnlineUrl(method.Location))@(Model.CSMarkdown.GetGenericArguments(method))</text>
<text>  @Model.CSMarkdown.GetMethodSignature(method)</text>
<text></text>
}
}
} 
}